apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "tokenplace-relay.fullname" . }}
  labels:
    {{- include "tokenplace-relay.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "tokenplace-relay.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "tokenplace-relay.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml .Values.imagePullSecrets | nindent 8 }}
      {{- end }}
      {{- if .Values.serviceAccount.create }}
      serviceAccountName: {{ include "tokenplace-relay.fullname" . }}
      {{- else if .Values.serviceAccount.name }}
      serviceAccountName: {{ .Values.serviceAccount.name }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
          - name: relay
            image: {{ (include "tokenplace-relay.image" .) | quote }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.service.port }}
              name: http
          env:
            - name: RELAY_PORT
              value: {{ .Values.service.port | quote }}
            - name: TOKEN_PLACE_RELAY_UPSTREAMS
              value: {{ (include "tokenplace-relay.upstreamURL" .) | quote }}
            {{- if .Values.upstream.host }}
            - name: RELAY_UPSTREAM_HOST
              value: {{ .Values.upstream.host | quote }}
            {{- end }}
            {{- range .Values.env }}
            - name: {{ .name }}
              value: {{ .value | quote }}
            {{- end }}
            {{- if .Values.relay.serverToken.existingSecret }}
            - name: TOKEN_PLACE_RELAY_SERVER_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.relay.serverToken.existingSecret }}
                  key: {{ .Values.relay.serverToken.key }}
            {{- end }}
          {{- if .Values.envFrom }}
          envFrom:
            {{- toYaml .Values.envFrom | nindent 12 }}
          {{- end }}
          readinessProbe:
            httpGet:
              path: /healthz
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /livez
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
            failureThreshold: 3
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
*** End Patch
