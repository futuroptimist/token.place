name: Build relay container image

on:
  push:
    branches:
      - main
      - codex/**
    tags:
      - 'v*'
    paths:
      - Dockerfile
      - docker/relay/**
      - relay.py
      - config/**
      - api/**
      - utils/**
      - static/**
      - config/requirements_relay.txt
      - .github/workflows/build.yml
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/tokenplace-relay

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    env:
      PUSH_IMAGE: ${{ github.event_name == 'push' && github.repository == 'futuroptimist/token.place' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')) }}
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha,prefix=sha-
            type=semver,pattern={{version}}
          flavor: |
            latest=false
          labels: |
            org.opencontainers.image.title=tokenplace-relay
            org.opencontainers.image.description=token.place relay service
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.documentation=${{ github.server_url }}/${{ github.repository }}/blob/${{ github.sha }}/docs/relay-deploy.md
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.created={{ timestamp }}

      - name: Login to GHCR
        if: env.PUSH_IMAGE == 'true'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push multi-arch image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: ${{ env.PUSH_IMAGE == 'true' }}
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          provenance: mode=max
          sbom: true

      - name: Image digest
        if: env.PUSH_IMAGE == 'true'
        run: echo "Digest: ${{ steps.build.outputs.digest }}"
