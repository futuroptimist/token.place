image:
  repository: ghcr.io/${OWNER}/tokenplace-relay
  tag: ""         # leave empty when using digest
  digest: ""      # immutable digest preferred in prod
  pullPolicy: IfNotPresent

imagePullSecrets: []

nameOverride: ""
fullnameOverride: ""

replicaCount: 1

containerPort: 5010

serviceAccount:
  create: false
  annotations: {}
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1000
  fsGroup: 1000
  seccompProfile:
    type: RuntimeDefault

securityContext:
  runAsNonRoot: true
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  seccompProfile:
    type: RuntimeDefault
  capabilities:
    drop:
      - ALL

resources:
  requests:
    cpu: 100m
    memory: 128Mi
  limits:
    cpu: 300m
    memory: 256Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 60
  targetMemoryUtilizationPercentage: 70

service:
  type: ClusterIP
  port: 80
  targetPort: http

ingress:
  enabled: true
  className: traefik
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-dns01
  hosts:
    - host: relay.example.com
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: relay-tls
      hosts:
        - relay.example.com

gpuExternalName:
  useHeadless: false
  host: gpu.example.com
  port: 5015
  headless:
    enabled: false
    addresses: []

upstream:
  url: http://gpu-server:5015

env: []

envFrom: []

serviceMonitor:
  enabled: false
  labels:
    release: kube-prometheus-stack
  namespaceSelector:
    any: true
  interval: 30s
  scrapeTimeout: 10s
  path: /metrics
  port: http

networkPolicy:
  enabled: true
  allowDNS: true
  dnsNamespaceSelector: {}
  dnsPodSelector:
    matchLabels:
      k8s-app: kube-dns
  gpu:
    enabled: true
    cidrs: []          # e.g. ["203.0.113.5/32"] for direct GPU host access
    namespaceSelector: {}
    podSelector: {}
    ports: []          # overrides gpuExternalName.port when provided
  extraIngress: []
  extraEgress: []

extraVolumes: []
extraVolumeMounts: []

tolerations: []
affinity: {}
nodeSelector: {}
topologySpreadConstraints: []
